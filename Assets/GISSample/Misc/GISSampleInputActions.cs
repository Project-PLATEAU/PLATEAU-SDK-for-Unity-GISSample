//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GISSample/Misc/GISSampleInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GISSampleInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GISSampleInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GISSampleInputActions"",
    ""maps"": [
        {
            ""name"": ""GISSample"",
            ""id"": ""e5b8e29e-3654-4249-9e14-dd8648f8dbf0"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMoveCameraByMouse"",
                    ""type"": ""Value"",
                    ""id"": ""fa426d65-f63f-4613-bf12-2404d0bd6912"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HorizontalMoveCameraByKeyboard"",
                    ""type"": ""Value"",
                    ""id"": ""a8d58dbf-3b8d-4ae0-b6d6-c624e8654c61"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VerticalMoveCameraByKeyboard"",
                    ""type"": ""Value"",
                    ""id"": ""e84d8a2b-1a21-465e-8a81-28a8e2409c0b"",
                    ""expectedControlType"": ""Double"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""1aca72dc-9921-4124-b45d-0c8cb4a6976e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""32641470-8ed9-4df7-90ef-04f321fa3e02"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectObject"",
                    ""type"": ""Button"",
                    ""id"": ""3f91495c-1606-429c-9575-041b48dc1990"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""3543b90c-5ad7-439f-8993-625ef6641210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""d68f7d60-960e-47ad-8789-da2b715ab2f0"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByMouse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""6c1d3e2d-7480-4f12-a815-5135616443ec"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""53daa96e-8b47-4d7c-bda8-3ffa9bf8fc3c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""eeb2da9e-cf46-4794-b69e-8e53ff5fc023"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""e8f8fe38-4a3d-46fd-918d-9ab38320b6c9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""18ea2163-1c3d-41fb-9775-d36b7554644f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.2,y=0.2)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6005b4c5-be0b-44e5-bb27-dcf1e9f90680"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.2)"",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0311b0a-e755-4723-a85a-c75d14cbe90d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""442611f7-112e-4bda-9161-74e183216453"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74115321-a83f-4235-82d7-5e479b030377"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69169da1-8496-46e4-a123-41bb827e82df"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9a83d29a-729e-49ad-b918-2de82752c6fa"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2,InvertVector2"",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6f90ed0d-b4a3-41d6-9853-66ee50028d52"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5744214d-68d3-4253-abaf-a3913e3c0ebc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c243971c-92a1-4a89-8669-59de1731a428"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cacc2f50-0b64-4db0-9c2b-451afc8030c8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""365695d6-0caa-479b-bf62-56fc1460e910"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a63758b2-125c-4ad2-9553-24cfbc38b4b2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""23485e4b-4760-411c-8c0d-133f6765c347"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""CameraMove"",
            ""id"": ""25841ef3-57ea-4f7c-aa9f-259776696bcb"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMoveCameraByKeyboard"",
                    ""type"": ""Value"",
                    ""id"": ""0fcfa255-84c8-42f6-a69b-bffe8b076322"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VerticalMoveCameraByKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""bf2542e8-1e77-4530-8c8e-fd0b57901792"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ParallelMoveCameraByMouse"",
                    ""type"": ""Button"",
                    ""id"": ""9b75438e-f0f6-44aa-a7be-7dab1c2e1adb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomMoveCameraByMouse"",
                    ""type"": ""Value"",
                    ""id"": ""821dfcc8-b89c-416e-a274-bddf26ed614e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCameraByMouse"",
                    ""type"": ""Button"",
                    ""id"": ""70ab9436-71d3-41a6-9f30-a99978a93692"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""82729305-f05a-4aba-9dc6-1db31d20606b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b5c4be9b-a911-4250-86de-b45933eca190"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""03b1faf5-e652-4514-9fd8-a7a7bdfa6cb7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""21d5c04e-582f-4e5f-b386-05c849a65e9e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9b51a55a-ca12-4c7b-8d26-102855af10c4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""UpDown-Key"",
                    ""id"": ""e1362cfd-c918-43c8-a43f-f32a58b91b41"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""71e894e8-7904-41e9-9a06-015a483dd4e9"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8676b57f-e311-4337-8812-fa20677e2977"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCameraByKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f9470fc1-7481-4b65-94f0-dbfb48c34c9f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ParallelMoveCameraByMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2dff40c-c313-4a35-8b6f-fb5abae8ecbe"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomMoveCameraByMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfe6ca10-9501-4634-9ff3-31c36d063547"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCameraByMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WalkerMove"",
            ""id"": ""a6fc71b7-4aff-4c78-b9a6-fa1b09907aea"",
            ""actions"": [
                {
                    ""name"": ""UpDown"",
                    ""type"": ""Button"",
                    ""id"": ""e0f7c166-427b-480e-8f24-33c4ca3f2713"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WASD"",
                    ""type"": ""Value"",
                    ""id"": ""1be83e46-0dde-4c10-ae39-3422d7c19cd9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""898f76bb-8ad5-4370-8141-4401d51ab681"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""UpDown-Key"",
                    ""id"": ""aa49db16-2e4b-4a0e-8f1a-ab952f679acd"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""3b340d09-dd5e-42c9-8466-21858a882003"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""c29688bd-d122-4d7a-b9b2-771d4ad12b12"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""adebc503-b1e4-45ec-b1c9-de17e2f90c6f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""640c1916-3944-4f44-b266-ea6ac8156c02"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""63e0a112-fcd3-4c37-9485-bbe41ca7db37"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""36879163-1b1b-4f46-bb69-20e462ab6af3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""2e39beed-3ca0-4fd7-a11a-1ded9fd8cd11"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cc46c117-fb36-46df-a5e9-4c2e69a9efca"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SelectCamPos"",
            ""id"": ""3ef930c7-1b3c-493e-ba23-f8dbf538b1aa"",
            ""actions"": [
                {
                    ""name"": ""SelectPosByInput"",
                    ""type"": ""Button"",
                    ""id"": ""45b4324e-dd3f-41e4-bdbb-88175f206e7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fdb59889-d73a-4a4a-adee-fb7b25f65009"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectPosByInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GISSample
        m_GISSample = asset.FindActionMap("GISSample", throwIfNotFound: true);
        m_GISSample_HorizontalMoveCameraByMouse = m_GISSample.FindAction("HorizontalMoveCameraByMouse", throwIfNotFound: true);
        m_GISSample_HorizontalMoveCameraByKeyboard = m_GISSample.FindAction("HorizontalMoveCameraByKeyboard", throwIfNotFound: true);
        m_GISSample_VerticalMoveCameraByKeyboard = m_GISSample.FindAction("VerticalMoveCameraByKeyboard", throwIfNotFound: true);
        m_GISSample_RotateCamera = m_GISSample.FindAction("RotateCamera", throwIfNotFound: true);
        m_GISSample_ZoomCamera = m_GISSample.FindAction("ZoomCamera", throwIfNotFound: true);
        m_GISSample_SelectObject = m_GISSample.FindAction("SelectObject", throwIfNotFound: true);
        m_GISSample_Click = m_GISSample.FindAction("Click", throwIfNotFound: true);
        // CameraMove
        m_CameraMove = asset.FindActionMap("CameraMove", throwIfNotFound: true);
        m_CameraMove_HorizontalMoveCameraByKeyboard = m_CameraMove.FindAction("HorizontalMoveCameraByKeyboard", throwIfNotFound: true);
        m_CameraMove_VerticalMoveCameraByKeyboard = m_CameraMove.FindAction("VerticalMoveCameraByKeyboard", throwIfNotFound: true);
        m_CameraMove_ParallelMoveCameraByMouse = m_CameraMove.FindAction("ParallelMoveCameraByMouse", throwIfNotFound: true);
        m_CameraMove_ZoomMoveCameraByMouse = m_CameraMove.FindAction("ZoomMoveCameraByMouse", throwIfNotFound: true);
        m_CameraMove_RotateCameraByMouse = m_CameraMove.FindAction("RotateCameraByMouse", throwIfNotFound: true);
        // WalkerMove
        m_WalkerMove = asset.FindActionMap("WalkerMove", throwIfNotFound: true);
        m_WalkerMove_UpDown = m_WalkerMove.FindAction("UpDown", throwIfNotFound: true);
        m_WalkerMove_WASD = m_WalkerMove.FindAction("WASD", throwIfNotFound: true);
        m_WalkerMove_RightClick = m_WalkerMove.FindAction("RightClick", throwIfNotFound: true);
        // SelectCamPos
        m_SelectCamPos = asset.FindActionMap("SelectCamPos", throwIfNotFound: true);
        m_SelectCamPos_SelectPosByInput = m_SelectCamPos.FindAction("SelectPosByInput", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GISSample
    private readonly InputActionMap m_GISSample;
    private List<IGISSampleActions> m_GISSampleActionsCallbackInterfaces = new List<IGISSampleActions>();
    private readonly InputAction m_GISSample_HorizontalMoveCameraByMouse;
    private readonly InputAction m_GISSample_HorizontalMoveCameraByKeyboard;
    private readonly InputAction m_GISSample_VerticalMoveCameraByKeyboard;
    private readonly InputAction m_GISSample_RotateCamera;
    private readonly InputAction m_GISSample_ZoomCamera;
    private readonly InputAction m_GISSample_SelectObject;
    private readonly InputAction m_GISSample_Click;
    public struct GISSampleActions
    {
        private @GISSampleInputActions m_Wrapper;
        public GISSampleActions(@GISSampleInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @HorizontalMoveCameraByMouse => m_Wrapper.m_GISSample_HorizontalMoveCameraByMouse;
        public InputAction @HorizontalMoveCameraByKeyboard => m_Wrapper.m_GISSample_HorizontalMoveCameraByKeyboard;
        public InputAction @VerticalMoveCameraByKeyboard => m_Wrapper.m_GISSample_VerticalMoveCameraByKeyboard;
        public InputAction @RotateCamera => m_Wrapper.m_GISSample_RotateCamera;
        public InputAction @ZoomCamera => m_Wrapper.m_GISSample_ZoomCamera;
        public InputAction @SelectObject => m_Wrapper.m_GISSample_SelectObject;
        public InputAction @Click => m_Wrapper.m_GISSample_Click;
        public InputActionMap Get() { return m_Wrapper.m_GISSample; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GISSampleActions set) { return set.Get(); }
        public void AddCallbacks(IGISSampleActions instance)
        {
            if (instance == null || m_Wrapper.m_GISSampleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GISSampleActionsCallbackInterfaces.Add(instance);
            @HorizontalMoveCameraByMouse.started += instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByMouse.performed += instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByMouse.canceled += instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByKeyboard.started += instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.performed += instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.canceled += instance.OnHorizontalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.started += instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.performed += instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.canceled += instance.OnVerticalMoveCameraByKeyboard;
            @RotateCamera.started += instance.OnRotateCamera;
            @RotateCamera.performed += instance.OnRotateCamera;
            @RotateCamera.canceled += instance.OnRotateCamera;
            @ZoomCamera.started += instance.OnZoomCamera;
            @ZoomCamera.performed += instance.OnZoomCamera;
            @ZoomCamera.canceled += instance.OnZoomCamera;
            @SelectObject.started += instance.OnSelectObject;
            @SelectObject.performed += instance.OnSelectObject;
            @SelectObject.canceled += instance.OnSelectObject;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
        }

        private void UnregisterCallbacks(IGISSampleActions instance)
        {
            @HorizontalMoveCameraByMouse.started -= instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByMouse.performed -= instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByMouse.canceled -= instance.OnHorizontalMoveCameraByMouse;
            @HorizontalMoveCameraByKeyboard.started -= instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.performed -= instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.canceled -= instance.OnHorizontalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.started -= instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.performed -= instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.canceled -= instance.OnVerticalMoveCameraByKeyboard;
            @RotateCamera.started -= instance.OnRotateCamera;
            @RotateCamera.performed -= instance.OnRotateCamera;
            @RotateCamera.canceled -= instance.OnRotateCamera;
            @ZoomCamera.started -= instance.OnZoomCamera;
            @ZoomCamera.performed -= instance.OnZoomCamera;
            @ZoomCamera.canceled -= instance.OnZoomCamera;
            @SelectObject.started -= instance.OnSelectObject;
            @SelectObject.performed -= instance.OnSelectObject;
            @SelectObject.canceled -= instance.OnSelectObject;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
        }

        public void RemoveCallbacks(IGISSampleActions instance)
        {
            if (m_Wrapper.m_GISSampleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGISSampleActions instance)
        {
            foreach (var item in m_Wrapper.m_GISSampleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GISSampleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GISSampleActions @GISSample => new GISSampleActions(this);

    // CameraMove
    private readonly InputActionMap m_CameraMove;
    private List<ICameraMoveActions> m_CameraMoveActionsCallbackInterfaces = new List<ICameraMoveActions>();
    private readonly InputAction m_CameraMove_HorizontalMoveCameraByKeyboard;
    private readonly InputAction m_CameraMove_VerticalMoveCameraByKeyboard;
    private readonly InputAction m_CameraMove_ParallelMoveCameraByMouse;
    private readonly InputAction m_CameraMove_ZoomMoveCameraByMouse;
    private readonly InputAction m_CameraMove_RotateCameraByMouse;
    public struct CameraMoveActions
    {
        private @GISSampleInputActions m_Wrapper;
        public CameraMoveActions(@GISSampleInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @HorizontalMoveCameraByKeyboard => m_Wrapper.m_CameraMove_HorizontalMoveCameraByKeyboard;
        public InputAction @VerticalMoveCameraByKeyboard => m_Wrapper.m_CameraMove_VerticalMoveCameraByKeyboard;
        public InputAction @ParallelMoveCameraByMouse => m_Wrapper.m_CameraMove_ParallelMoveCameraByMouse;
        public InputAction @ZoomMoveCameraByMouse => m_Wrapper.m_CameraMove_ZoomMoveCameraByMouse;
        public InputAction @RotateCameraByMouse => m_Wrapper.m_CameraMove_RotateCameraByMouse;
        public InputActionMap Get() { return m_Wrapper.m_CameraMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMoveActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMoveActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMoveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMoveActionsCallbackInterfaces.Add(instance);
            @HorizontalMoveCameraByKeyboard.started += instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.performed += instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.canceled += instance.OnHorizontalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.started += instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.performed += instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.canceled += instance.OnVerticalMoveCameraByKeyboard;
            @ParallelMoveCameraByMouse.started += instance.OnParallelMoveCameraByMouse;
            @ParallelMoveCameraByMouse.performed += instance.OnParallelMoveCameraByMouse;
            @ParallelMoveCameraByMouse.canceled += instance.OnParallelMoveCameraByMouse;
            @ZoomMoveCameraByMouse.started += instance.OnZoomMoveCameraByMouse;
            @ZoomMoveCameraByMouse.performed += instance.OnZoomMoveCameraByMouse;
            @ZoomMoveCameraByMouse.canceled += instance.OnZoomMoveCameraByMouse;
            @RotateCameraByMouse.started += instance.OnRotateCameraByMouse;
            @RotateCameraByMouse.performed += instance.OnRotateCameraByMouse;
            @RotateCameraByMouse.canceled += instance.OnRotateCameraByMouse;
        }

        private void UnregisterCallbacks(ICameraMoveActions instance)
        {
            @HorizontalMoveCameraByKeyboard.started -= instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.performed -= instance.OnHorizontalMoveCameraByKeyboard;
            @HorizontalMoveCameraByKeyboard.canceled -= instance.OnHorizontalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.started -= instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.performed -= instance.OnVerticalMoveCameraByKeyboard;
            @VerticalMoveCameraByKeyboard.canceled -= instance.OnVerticalMoveCameraByKeyboard;
            @ParallelMoveCameraByMouse.started -= instance.OnParallelMoveCameraByMouse;
            @ParallelMoveCameraByMouse.performed -= instance.OnParallelMoveCameraByMouse;
            @ParallelMoveCameraByMouse.canceled -= instance.OnParallelMoveCameraByMouse;
            @ZoomMoveCameraByMouse.started -= instance.OnZoomMoveCameraByMouse;
            @ZoomMoveCameraByMouse.performed -= instance.OnZoomMoveCameraByMouse;
            @ZoomMoveCameraByMouse.canceled -= instance.OnZoomMoveCameraByMouse;
            @RotateCameraByMouse.started -= instance.OnRotateCameraByMouse;
            @RotateCameraByMouse.performed -= instance.OnRotateCameraByMouse;
            @RotateCameraByMouse.canceled -= instance.OnRotateCameraByMouse;
        }

        public void RemoveCallbacks(ICameraMoveActions instance)
        {
            if (m_Wrapper.m_CameraMoveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMoveActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMoveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMoveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMoveActions @CameraMove => new CameraMoveActions(this);

    // WalkerMove
    private readonly InputActionMap m_WalkerMove;
    private List<IWalkerMoveActions> m_WalkerMoveActionsCallbackInterfaces = new List<IWalkerMoveActions>();
    private readonly InputAction m_WalkerMove_UpDown;
    private readonly InputAction m_WalkerMove_WASD;
    private readonly InputAction m_WalkerMove_RightClick;
    public struct WalkerMoveActions
    {
        private @GISSampleInputActions m_Wrapper;
        public WalkerMoveActions(@GISSampleInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @UpDown => m_Wrapper.m_WalkerMove_UpDown;
        public InputAction @WASD => m_Wrapper.m_WalkerMove_WASD;
        public InputAction @RightClick => m_Wrapper.m_WalkerMove_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_WalkerMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WalkerMoveActions set) { return set.Get(); }
        public void AddCallbacks(IWalkerMoveActions instance)
        {
            if (instance == null || m_Wrapper.m_WalkerMoveActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WalkerMoveActionsCallbackInterfaces.Add(instance);
            @UpDown.started += instance.OnUpDown;
            @UpDown.performed += instance.OnUpDown;
            @UpDown.canceled += instance.OnUpDown;
            @WASD.started += instance.OnWASD;
            @WASD.performed += instance.OnWASD;
            @WASD.canceled += instance.OnWASD;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
        }

        private void UnregisterCallbacks(IWalkerMoveActions instance)
        {
            @UpDown.started -= instance.OnUpDown;
            @UpDown.performed -= instance.OnUpDown;
            @UpDown.canceled -= instance.OnUpDown;
            @WASD.started -= instance.OnWASD;
            @WASD.performed -= instance.OnWASD;
            @WASD.canceled -= instance.OnWASD;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
        }

        public void RemoveCallbacks(IWalkerMoveActions instance)
        {
            if (m_Wrapper.m_WalkerMoveActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWalkerMoveActions instance)
        {
            foreach (var item in m_Wrapper.m_WalkerMoveActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WalkerMoveActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WalkerMoveActions @WalkerMove => new WalkerMoveActions(this);

    // SelectCamPos
    private readonly InputActionMap m_SelectCamPos;
    private List<ISelectCamPosActions> m_SelectCamPosActionsCallbackInterfaces = new List<ISelectCamPosActions>();
    private readonly InputAction m_SelectCamPos_SelectPosByInput;
    public struct SelectCamPosActions
    {
        private @GISSampleInputActions m_Wrapper;
        public SelectCamPosActions(@GISSampleInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectPosByInput => m_Wrapper.m_SelectCamPos_SelectPosByInput;
        public InputActionMap Get() { return m_Wrapper.m_SelectCamPos; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SelectCamPosActions set) { return set.Get(); }
        public void AddCallbacks(ISelectCamPosActions instance)
        {
            if (instance == null || m_Wrapper.m_SelectCamPosActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SelectCamPosActionsCallbackInterfaces.Add(instance);
            @SelectPosByInput.started += instance.OnSelectPosByInput;
            @SelectPosByInput.performed += instance.OnSelectPosByInput;
            @SelectPosByInput.canceled += instance.OnSelectPosByInput;
        }

        private void UnregisterCallbacks(ISelectCamPosActions instance)
        {
            @SelectPosByInput.started -= instance.OnSelectPosByInput;
            @SelectPosByInput.performed -= instance.OnSelectPosByInput;
            @SelectPosByInput.canceled -= instance.OnSelectPosByInput;
        }

        public void RemoveCallbacks(ISelectCamPosActions instance)
        {
            if (m_Wrapper.m_SelectCamPosActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISelectCamPosActions instance)
        {
            foreach (var item in m_Wrapper.m_SelectCamPosActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SelectCamPosActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SelectCamPosActions @SelectCamPos => new SelectCamPosActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    public interface IGISSampleActions
    {
        void OnHorizontalMoveCameraByMouse(InputAction.CallbackContext context);
        void OnHorizontalMoveCameraByKeyboard(InputAction.CallbackContext context);
        void OnVerticalMoveCameraByKeyboard(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnZoomCamera(InputAction.CallbackContext context);
        void OnSelectObject(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
    }
    public interface ICameraMoveActions
    {
        void OnHorizontalMoveCameraByKeyboard(InputAction.CallbackContext context);
        void OnVerticalMoveCameraByKeyboard(InputAction.CallbackContext context);
        void OnParallelMoveCameraByMouse(InputAction.CallbackContext context);
        void OnZoomMoveCameraByMouse(InputAction.CallbackContext context);
        void OnRotateCameraByMouse(InputAction.CallbackContext context);
    }
    public interface IWalkerMoveActions
    {
        void OnUpDown(InputAction.CallbackContext context);
        void OnWASD(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
    public interface ISelectCamPosActions
    {
        void OnSelectPosByInput(InputAction.CallbackContext context);
    }
}
